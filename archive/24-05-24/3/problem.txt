Problem 4: The Simplest Math(s) Problem No One Can Solve :O

The function $f$ is defined on the integers as follows: if $n$ is even, $f(n) = n/2$, and if $n$ is odd, $f(n) = 3n+1$. It's probably true that, if we apply $f$ enough times, we eventually reach the number 1. For example, if we start with $n = 12$, we get the following sequence of numbers from applying $f$: 6, 3, 10, 5, 16, 8, 4, 2, 1. Your program should input such an integer $n$ and output the number of applications of $f$ that are required to reach 1 for the first time - for example, $f(12) = 9$.

<strong>Example Input</strong>
```
12
```
<strong>Example Output</strong>
```
9
```
<strong>Constraints</strong>
You are guaranteed that $n < 2^{63}$. You are also guaranteed that every number obtained by applying $f$ repeatedly to $n$ is also strictly less than $2^{63}$. Your program must complete within 1 second, and use no more than 64MB of memory.