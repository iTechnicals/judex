Problem 6: Modulo Modulo

During a time of great stress, <unnamed teacher> was busy in his office adding numbers together in order to help relax. However, he realised that, if he could outsource the requisite services for relaxation to <unnamed school> students, then he could simply be relaxed all the time, whilst also getting on with marking the tests of his Further Stats class. The exact nature of his additive repose involves the <em>digitsum function</em>.

The digitsum function $d$ takes a positive integer $n$ and returns the sum of all the digits in that number (expressed in base 10). It is well known for decreasing very rapidly, and when it's repeatedly applied, the numbers get very small very quick. For example, every number with 100 or fewer digits reaches a single digit within at most 4 applications.

Since the digitsum of any number 10 or above is less than that number, it's guaranteed that repeated applications will eventually land us on a single digit. Your program should input a positive integer $n$, and return the single digit that this integer lands on when the digitsum function is repeatedly applied.

<strong>Example Input</strong>
```
123456789123456789
```
<strong>Example Output</strong>
```
9
```
<strong>Constraints</strong>
You are guaranteed that $0 \leq d \leq 10^{500}$. Your program must complete within 1 second, and use no more than 64MB of memory.

<strong>Explanation</strong>
$d(123456789123456789) = 2(1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9) = 90$
$d(90) = 9 + 0 = 9$